// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: setting.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_setting_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_setting_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_setting_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_setting_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_setting_2eproto;
namespace setting {
class Alarm;
class AlarmDefaultTypeInternal;
extern AlarmDefaultTypeInternal _Alarm_default_instance_;
class Alarm_Body;
class Alarm_BodyDefaultTypeInternal;
extern Alarm_BodyDefaultTypeInternal _Alarm_Body_default_instance_;
class Time;
class TimeDefaultTypeInternal;
extern TimeDefaultTypeInternal _Time_default_instance_;
}  // namespace setting
PROTOBUF_NAMESPACE_OPEN
template<> ::setting::Alarm* Arena::CreateMaybeMessage<::setting::Alarm>(Arena*);
template<> ::setting::Alarm_Body* Arena::CreateMaybeMessage<::setting::Alarm_Body>(Arena*);
template<> ::setting::Time* Arena::CreateMaybeMessage<::setting::Time>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace setting {

// ===================================================================

class Time PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:setting.Time) */ {
 public:
  inline Time() : Time(nullptr) {}
  virtual ~Time();

  Time(const Time& from);
  Time(Time&& from) noexcept
    : Time() {
    *this = ::std::move(from);
  }

  inline Time& operator=(const Time& from) {
    CopyFrom(from);
    return *this;
  }
  inline Time& operator=(Time&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Time& default_instance();

  static inline const Time* internal_default_instance() {
    return reinterpret_cast<const Time*>(
               &_Time_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Time& a, Time& b) {
    a.Swap(&b);
  }
  inline void Swap(Time* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Time* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Time* New() const final {
    return CreateMaybeMessage<Time>(nullptr);
  }

  Time* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Time>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Time& from);
  void MergeFrom(const Time& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Time* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "setting.Time";
  }
  protected:
  explicit Time(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_setting_2eproto);
    return ::descriptor_table_setting_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnixTimestampFieldNumber = 1,
  };
  // required fixed32 unix_timestamp = 1;
  bool has_unix_timestamp() const;
  private:
  bool _internal_has_unix_timestamp() const;
  public:
  void clear_unix_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 unix_timestamp() const;
  void set_unix_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_unix_timestamp() const;
  void _internal_set_unix_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:setting.Time)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 unix_timestamp_;
  friend struct ::TableStruct_setting_2eproto;
};
// -------------------------------------------------------------------

class Alarm_Body PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:setting.Alarm.Body) */ {
 public:
  inline Alarm_Body() : Alarm_Body(nullptr) {}
  virtual ~Alarm_Body();

  Alarm_Body(const Alarm_Body& from);
  Alarm_Body(Alarm_Body&& from) noexcept
    : Alarm_Body() {
    *this = ::std::move(from);
  }

  inline Alarm_Body& operator=(const Alarm_Body& from) {
    CopyFrom(from);
    return *this;
  }
  inline Alarm_Body& operator=(Alarm_Body&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Alarm_Body& default_instance();

  static inline const Alarm_Body* internal_default_instance() {
    return reinterpret_cast<const Alarm_Body*>(
               &_Alarm_Body_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Alarm_Body& a, Alarm_Body& b) {
    a.Swap(&b);
  }
  inline void Swap(Alarm_Body* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Alarm_Body* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Alarm_Body* New() const final {
    return CreateMaybeMessage<Alarm_Body>(nullptr);
  }

  Alarm_Body* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Alarm_Body>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Alarm_Body& from);
  void MergeFrom(const Alarm_Body& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Alarm_Body* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "setting.Alarm.Body";
  }
  protected:
  explicit Alarm_Body(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_setting_2eproto);
    return ::descriptor_table_setting_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHourFieldNumber = 1,
    kMinFieldNumber = 2,
    kSecFieldNumber = 3,
    kWeekbitsFieldNumber = 4,
    kRepeatFieldNumber = 5,
  };
  // required uint32 hour = 1;
  bool has_hour() const;
  private:
  bool _internal_has_hour() const;
  public:
  void clear_hour();
  ::PROTOBUF_NAMESPACE_ID::uint32 hour() const;
  void set_hour(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hour() const;
  void _internal_set_hour(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 min = 2;
  bool has_min() const;
  private:
  bool _internal_has_min() const;
  public:
  void clear_min();
  ::PROTOBUF_NAMESPACE_ID::uint32 min() const;
  void set_min(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_min() const;
  void _internal_set_min(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 sec = 3;
  bool has_sec() const;
  private:
  bool _internal_has_sec() const;
  public:
  void clear_sec();
  ::PROTOBUF_NAMESPACE_ID::uint32 sec() const;
  void set_sec(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sec() const;
  void _internal_set_sec(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 weekbits = 4;
  bool has_weekbits() const;
  private:
  bool _internal_has_weekbits() const;
  public:
  void clear_weekbits();
  ::PROTOBUF_NAMESPACE_ID::uint32 weekbits() const;
  void set_weekbits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_weekbits() const;
  void _internal_set_weekbits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required bool repeat = 5;
  bool has_repeat() const;
  private:
  bool _internal_has_repeat() const;
  public:
  void clear_repeat();
  bool repeat() const;
  void set_repeat(bool value);
  private:
  bool _internal_repeat() const;
  void _internal_set_repeat(bool value);
  public:

  // @@protoc_insertion_point(class_scope:setting.Alarm.Body)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hour_;
  ::PROTOBUF_NAMESPACE_ID::uint32 min_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sec_;
  ::PROTOBUF_NAMESPACE_ID::uint32 weekbits_;
  bool repeat_;
  friend struct ::TableStruct_setting_2eproto;
};
// -------------------------------------------------------------------

class Alarm PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:setting.Alarm) */ {
 public:
  inline Alarm() : Alarm(nullptr) {}
  virtual ~Alarm();

  Alarm(const Alarm& from);
  Alarm(Alarm&& from) noexcept
    : Alarm() {
    *this = ::std::move(from);
  }

  inline Alarm& operator=(const Alarm& from) {
    CopyFrom(from);
    return *this;
  }
  inline Alarm& operator=(Alarm&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Alarm& default_instance();

  static inline const Alarm* internal_default_instance() {
    return reinterpret_cast<const Alarm*>(
               &_Alarm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Alarm& a, Alarm& b) {
    a.Swap(&b);
  }
  inline void Swap(Alarm* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Alarm* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Alarm* New() const final {
    return CreateMaybeMessage<Alarm>(nullptr);
  }

  Alarm* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Alarm>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Alarm& from);
  void MergeFrom(const Alarm& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Alarm* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "setting.Alarm";
  }
  protected:
  explicit Alarm(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_setting_2eproto);
    return ::descriptor_table_setting_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Alarm_Body Body;

  // accessors -------------------------------------------------------

  enum : int {
    kEntitiesFieldNumber = 1,
  };
  // repeated .setting.Alarm.Body entities = 1;
  int entities_size() const;
  private:
  int _internal_entities_size() const;
  public:
  void clear_entities();
  ::setting::Alarm_Body* mutable_entities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::setting::Alarm_Body >*
      mutable_entities();
  private:
  const ::setting::Alarm_Body& _internal_entities(int index) const;
  ::setting::Alarm_Body* _internal_add_entities();
  public:
  const ::setting::Alarm_Body& entities(int index) const;
  ::setting::Alarm_Body* add_entities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::setting::Alarm_Body >&
      entities() const;

  // @@protoc_insertion_point(class_scope:setting.Alarm)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::setting::Alarm_Body > entities_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_setting_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Time

// required fixed32 unix_timestamp = 1;
inline bool Time::_internal_has_unix_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Time::has_unix_timestamp() const {
  return _internal_has_unix_timestamp();
}
inline void Time::clear_unix_timestamp() {
  unix_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Time::_internal_unix_timestamp() const {
  return unix_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Time::unix_timestamp() const {
  // @@protoc_insertion_point(field_get:setting.Time.unix_timestamp)
  return _internal_unix_timestamp();
}
inline void Time::_internal_set_unix_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  unix_timestamp_ = value;
}
inline void Time::set_unix_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_unix_timestamp(value);
  // @@protoc_insertion_point(field_set:setting.Time.unix_timestamp)
}

// -------------------------------------------------------------------

// Alarm_Body

// required uint32 hour = 1;
inline bool Alarm_Body::_internal_has_hour() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Alarm_Body::has_hour() const {
  return _internal_has_hour();
}
inline void Alarm_Body::clear_hour() {
  hour_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm_Body::_internal_hour() const {
  return hour_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm_Body::hour() const {
  // @@protoc_insertion_point(field_get:setting.Alarm.Body.hour)
  return _internal_hour();
}
inline void Alarm_Body::_internal_set_hour(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hour_ = value;
}
inline void Alarm_Body::set_hour(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hour(value);
  // @@protoc_insertion_point(field_set:setting.Alarm.Body.hour)
}

// required uint32 min = 2;
inline bool Alarm_Body::_internal_has_min() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Alarm_Body::has_min() const {
  return _internal_has_min();
}
inline void Alarm_Body::clear_min() {
  min_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm_Body::_internal_min() const {
  return min_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm_Body::min() const {
  // @@protoc_insertion_point(field_get:setting.Alarm.Body.min)
  return _internal_min();
}
inline void Alarm_Body::_internal_set_min(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  min_ = value;
}
inline void Alarm_Body::set_min(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:setting.Alarm.Body.min)
}

// required uint32 sec = 3;
inline bool Alarm_Body::_internal_has_sec() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Alarm_Body::has_sec() const {
  return _internal_has_sec();
}
inline void Alarm_Body::clear_sec() {
  sec_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm_Body::_internal_sec() const {
  return sec_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm_Body::sec() const {
  // @@protoc_insertion_point(field_get:setting.Alarm.Body.sec)
  return _internal_sec();
}
inline void Alarm_Body::_internal_set_sec(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  sec_ = value;
}
inline void Alarm_Body::set_sec(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sec(value);
  // @@protoc_insertion_point(field_set:setting.Alarm.Body.sec)
}

// required uint32 weekbits = 4;
inline bool Alarm_Body::_internal_has_weekbits() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool Alarm_Body::has_weekbits() const {
  return _internal_has_weekbits();
}
inline void Alarm_Body::clear_weekbits() {
  weekbits_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm_Body::_internal_weekbits() const {
  return weekbits_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Alarm_Body::weekbits() const {
  // @@protoc_insertion_point(field_get:setting.Alarm.Body.weekbits)
  return _internal_weekbits();
}
inline void Alarm_Body::_internal_set_weekbits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  weekbits_ = value;
}
inline void Alarm_Body::set_weekbits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_weekbits(value);
  // @@protoc_insertion_point(field_set:setting.Alarm.Body.weekbits)
}

// required bool repeat = 5;
inline bool Alarm_Body::_internal_has_repeat() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool Alarm_Body::has_repeat() const {
  return _internal_has_repeat();
}
inline void Alarm_Body::clear_repeat() {
  repeat_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool Alarm_Body::_internal_repeat() const {
  return repeat_;
}
inline bool Alarm_Body::repeat() const {
  // @@protoc_insertion_point(field_get:setting.Alarm.Body.repeat)
  return _internal_repeat();
}
inline void Alarm_Body::_internal_set_repeat(bool value) {
  _has_bits_[0] |= 0x00000010u;
  repeat_ = value;
}
inline void Alarm_Body::set_repeat(bool value) {
  _internal_set_repeat(value);
  // @@protoc_insertion_point(field_set:setting.Alarm.Body.repeat)
}

// -------------------------------------------------------------------

// Alarm

// repeated .setting.Alarm.Body entities = 1;
inline int Alarm::_internal_entities_size() const {
  return entities_.size();
}
inline int Alarm::entities_size() const {
  return _internal_entities_size();
}
inline void Alarm::clear_entities() {
  entities_.Clear();
}
inline ::setting::Alarm_Body* Alarm::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:setting.Alarm.entities)
  return entities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::setting::Alarm_Body >*
Alarm::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:setting.Alarm.entities)
  return &entities_;
}
inline const ::setting::Alarm_Body& Alarm::_internal_entities(int index) const {
  return entities_.Get(index);
}
inline const ::setting::Alarm_Body& Alarm::entities(int index) const {
  // @@protoc_insertion_point(field_get:setting.Alarm.entities)
  return _internal_entities(index);
}
inline ::setting::Alarm_Body* Alarm::_internal_add_entities() {
  return entities_.Add();
}
inline ::setting::Alarm_Body* Alarm::add_entities() {
  // @@protoc_insertion_point(field_add:setting.Alarm.entities)
  return _internal_add_entities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::setting::Alarm_Body >&
Alarm::entities() const {
  // @@protoc_insertion_point(field_list:setting.Alarm.entities)
  return entities_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace setting

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_setting_2eproto
